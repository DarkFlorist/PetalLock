{"version":3,"file":"utilities.js","sourceRoot":"","sources":["../../ts/utils/utilities.ts"],"names":[],"mappings":"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","sourcesContent":["export async function sleep(milliseconds: number) {\n\tawait new Promise(resolve => setTimeout(resolve, milliseconds))\n}\n\nexport function jsonStringify(value: unknown, space?: string | number | undefined): string {\n    return JSON.stringify(value, (_, value) => {\n\t\tif (typeof value === 'bigint') return `0x${value.toString(16)}n`\n\t\tif (value instanceof Uint8Array) return `b'${Array.from(value).map(x => x.toString(16).padStart(2, '0')).join('')}'`\n\t\t// cast works around https://github.com/uhyo/better-typescript-lib/issues/36\n\t\treturn value as JSONValueF<unknown>\n    }, space)\n}\n\nexport function jsonParse(text: string): unknown {\n\treturn JSON.parse(text, (_key: string, value: unknown) => {\n\t\tif (typeof value !== 'string') return value\n\t\tif (/^0x[a-fA-F0-9]+n$/.test(value)) return BigInt(value.slice(0, -1))\n\t\tconst bytesMatch = /^b'(:<hex>[a-fA-F0-9])+'$/.exec(value)\n\t\tif (bytesMatch && 'groups' in bytesMatch && bytesMatch.groups && 'hex' in bytesMatch.groups && bytesMatch.groups['hex'].length % 2 === 0) return hexToBytes(`0x${bytesMatch.groups['hex']}`)\n\t\treturn value\n\t})\n}\n\nexport function ensureError(caught: unknown) {\n\treturn (caught instanceof Error) ? caught\n\t\t: typeof caught === 'string' ? new Error(caught)\n\t\t: typeof caught === 'object' && caught !== null && 'message' in caught && typeof caught.message === 'string' ? new Error(caught.message)\n\t\t: new Error(`Unknown error occurred.\\n${jsonStringify(caught)}`)\n}\n\nfunction hexToBytes(value: string) {\n\tconst result = new Uint8Array((value.length - 2) / 2)\n\tfor (let i = 0; i < result.length; ++i) {\n\t\tresult[i] = Number.parseInt(value.slice(i * 2 + 2, i * 2 + 4), 16)\n\t}\n\treturn result\n}\n\nexport function dataString(data: Uint8Array | null) {\n\tif (data === null) return ''\n\treturn Array.from(data).map(x => x.toString(16).padStart(2, '0')).join('')\n}\n\nexport function dataStringWith0xStart(data: Uint8Array | null): `0x${ string }` {\n\tif (data === null) return '0x'\n\treturn `0x${ dataString(data) }`\n}\n\nexport function decodeEthereumNameServiceString(ens: string): string {\n\tconst parts = ens.split('.')\n\tconst encodedData: string[] = []\n\tencodedData.push('0x')\n\n\tfunction stringToHex(str: string): string {\n\t\treturn Array.from(str).map((char) => char.charCodeAt(0).toString(16).padStart(2, '0')).join('')\n\t}\n\tparts.forEach((part) => {\n\t\tconst encodedPart = stringToHex(part)\n\t\tconst byteCount = (encodedPart.length / 2).toString(16).padStart(2, '0')\n\t\tencodedData.push(byteCount + encodedPart)\n\t})\n\n\tencodedData.push('00')\n\treturn encodedData.join('')\n}\n\nexport function assertNever(value: never): never {\n\tthrow new Error(`Unhandled discriminated union member: ${JSON.stringify(value)}`)\n}\n\nexport function isSameAddress(address1: `0x${ string }` | undefined, address2: `0x${ string }` | undefined) {\n\tif (address1 === undefined && address2 === undefined) return true\n\tif (address1 === undefined || address2 === undefined) return false\n\treturn address1.toLowerCase() === address2.toLowerCase()\n}\n\nexport const splitEnsStringToSubdomainPath = (input: string): string[] => {\n\tconst parts = input.split('.')\n\tconst result: string[] = []\n\n\tfor (let i = 0; i < parts.length; i++) {\n\t\tconst joined = parts.slice(i).join('.')\n\t\tresult.push(joined)\n\t}\n\tresult.pop() // eth element\n\treturn result.reverse()\n}\n\nexport const splitDomainToSubDomainAndParent = (domain: string): [string, string] => {\n\tconst index = domain.indexOf('.')\n\tif (index === -1) throw new Error('not proper domain')\n\treturn [domain.slice(0, index), domain.slice(index + 1)]\n}\n\nexport function bigIntToNumber(value: bigint): number {\n\tif (value <= Number.MAX_SAFE_INTEGER && value >= Number.MIN_SAFE_INTEGER) {\n\t\treturn Number(value)\n\t}\n\tthrow new Error(`Value: \"${ value }\" is out of bounds to be a Number.`)\n}\n"]}