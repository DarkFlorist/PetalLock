{"version":3,"file":"ensUtils.js","sourceRoot":"","sources":["../../ts/utils/ensUtils.ts"],"names":[],"mappings":"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","sourcesContent":["import { createPublicClient, createWalletClient, custom, encodeAbiParameters, getAddress, getContractAddress, http, isAddress, labelhash, namehash, numberToBytes, publicActions, ReadContractErrorType } from 'viem'\nimport { mainnet } from 'viem/chains'\nimport { ENS_WRAPPER_ABI } from '../abi/ens_wrapper_abi.js'\nimport 'viem/window'\nimport { ENS_REGISTRY_ABI } from '../abi/ens_registry_abi.js'\nimport { bigIntToNumber, splitDomainToSubDomainAndParent, splitEnsStringToSubdomainPath } from './utilities.js'\nimport { ENS_PUBLIC_RESOLVER_ABI } from '../abi/ens_public_resolver_abi.js'\nimport { CAN_DO_EVERYTHING, ENS_ETH_REGISTRAR_CONTROLLER, ENS_ETHEREUM_NAME_SERVICE, ENS_FLAGS, ENS_PUBLIC_RESOLVER, ENS_REGISTRY_WITH_FALLBACK, ENS_NAME_WRAPPER, FINAL_CHILD_FUSES, MID_PARENT_FUSES, SINGLE_DOMAIN_FUSES, TOP_PARENT_FUSES } from './constants.js'\nimport { AccountAddress, DomainInfo, EnsFuseName } from '../types/types.js'\nimport { ENS_ETHEREUM_NAME_SERVICE_ABI } from '../abi/ens_ethereum_name_service_abi.js'\nimport { tryEncodeContentHash } from './contenthash.js'\nimport { petalLockContractArtifact } from '../VendoredPetalLock.js'\nimport { PETAL_LOCK_ABI } from '../abi/petal_lock_abi.js'\nimport { ENS_REGISTRAR_CONTROLLER_ABI } from '../abi/ens_registrar_controller_abi.js'\n\nexport const extractENSFuses = (uint: bigint): readonly EnsFuseName[] => {\n\tif (uint === CAN_DO_EVERYTHING) return ['Can Do Everything']\n\tconst result: EnsFuseName[] = []\n\tfor (const flag of ENS_FLAGS) {\n\t\tif ((uint & flag.value) === flag.value && flag.value !== CAN_DO_EVERYTHING) {\n\t\t\tresult.push(flag.name)\n\t\t}\n\t}\n\treturn result\n}\n\nexport const fuseNamesToUint = (names: readonly EnsFuseName[]): number => {\n\tlet result = 0\n\tfor (const name of names) {\n\t\tconst flag = ENS_FLAGS.find(flag => flag.name === name)\n\t\tif (flag) {\n\t\t\tresult |= Number(flag.value)\n\t\t}\n\t}\n\treturn result\n}\n\nexport const requestAccounts = async () => {\n\tif (window.ethereum === undefined) throw new Error('no window.ethereum injected')\n\tconst reply = await window.ethereum.request({ method: 'eth_requestAccounts', params: undefined })\n\treturn reply[0]\n}\n\nexport const getAccounts = async () => {\n\tif (window.ethereum === undefined) throw new Error('no window.ethereum injected')\n\tconst reply = await window.ethereum.request({ method: 'eth_accounts', params: undefined })\n\treturn reply[0]\n}\n\nconst createReadClient = (accountAddress: AccountAddress | undefined) => {\n\tif (window.ethereum === undefined || accountAddress === undefined) {\n\t\treturn createPublicClient({ chain: mainnet, transport: http('https://ethereum.dark.florist', { batch: { wait: 100 } }) })\n\t}\n\treturn createWalletClient({ chain: mainnet, transport: custom(window.ethereum) }).extend(publicActions)\n}\n\nconst createWriteClient = (accountAddress: AccountAddress) => {\n\tif (window.ethereum === undefined) throw new Error('no window.ethereum injected')\n\tif (accountAddress === undefined) throw new Error('no accountAddress!')\n\treturn createWalletClient({ account: accountAddress, chain: mainnet, transport: custom(window.ethereum) }).extend(publicActions)\n}\n\nexport const getChainId = async (accountAddress: AccountAddress) => {\n\treturn await createWriteClient(accountAddress).getChainId()\n}\n\nconst getDomainInfo = async (accountAddress: AccountAddress | undefined, nameHash: `0x${ string }`, label: string, parentDomain: string, token: `0x${ string }`, subDomain: string): Promise<DomainInfo> => {\n\tconst client = createReadClient(accountAddress)\n\tconst isWrappedPromise = client.readContract({\n\t\taddress: ENS_NAME_WRAPPER,\n\t\tabi: ENS_WRAPPER_ABI,\n\t\tfunctionName: 'isWrapped',\n\t\targs: [nameHash]\n\t})\n\n\tconst ownerPromise = client.readContract({\n\t\taddress: ENS_NAME_WRAPPER,\n\t\tabi: ENS_WRAPPER_ABI,\n\t\tfunctionName: 'ownerOf',\n\t\targs: [BigInt(nameHash)]\n\t})\n\n\tconst dataPromise = client.readContract({\n\t\taddress: ENS_NAME_WRAPPER,\n\t\tabi: ENS_WRAPPER_ABI,\n\t\tfunctionName: 'getData',\n\t\targs: [BigInt(nameHash)]\n\t})\n\n\tconst registeredPromise = client.readContract({\n\t\taddress: ENS_REGISTRY_WITH_FALLBACK,\n\t\tabi: ENS_REGISTRY_ABI,\n\t\tfunctionName: 'recordExists',\n\t\targs: [nameHash]\n\t})\n\n\tconst contentHashPromise = client.readContract({\n\t\taddress: ENS_PUBLIC_RESOLVER,\n\t\tabi: ENS_PUBLIC_RESOLVER_ABI,\n\t\tfunctionName: 'contenthash',\n\t\targs: [nameHash]\n\t})\n\n\tconst resolutionAddressPromise = client.readContract({\n\t\taddress: ENS_PUBLIC_RESOLVER,\n\t\tabi: ENS_PUBLIC_RESOLVER_ABI,\n\t\tfunctionName: 'addr',\n\t\targs: [nameHash]\n\t})\n\n\tconst getRegistryOwner = async () => {\n\t\ttry {\n\t\t\treturn await client.readContract({\n\t\t\t\taddress: ENS_ETHEREUM_NAME_SERVICE,\n\t\t\t\tabi: ENS_ETHEREUM_NAME_SERVICE_ABI,\n\t\t\t\tfunctionName: 'ownerOf',\n\t\t\t\targs: [BigInt(token)]\n\t\t\t})\n\t\t} catch (e) {\n\t\t\tconst error = e as ReadContractErrorType\n\t\t\tswitch(error.name) {\n\t\t\t\tcase 'ContractFunctionExecutionError': return `0x0000000000000000000000000000000000000000`\n\t\t\t}\n\t\t}\n\t}\n\n\tconst managerPromise = client.readContract({\n\t\taddress: ENS_REGISTRY_WITH_FALLBACK,\n\t\tabi: ENS_REGISTRY_ABI,\n\t\tfunctionName: 'owner',\n\t\targs: [nameHash]\n\t})\n\n\tconst approvedPromise = client.readContract({\n\t\taddress: ENS_NAME_WRAPPER,\n\t\tabi: ENS_WRAPPER_ABI,\n\t\tfunctionName: 'getApproved',\n\t\targs: [BigInt(nameHash)]\n\t})\n\n\tconst registeryOwnerPromise = getRegistryOwner()\n\tconst data = await dataPromise\n\treturn {\n\t\tnameHash,\n\t\tisWrapped: await isWrappedPromise,\n\t\towner: await ownerPromise,\n\t\tregisteryOwner: await registeryOwnerPromise,\n\t\tdata,\n\t\tfuses: extractENSFuses(BigInt(data[1])),\n\t\texpiry: new Date(bigIntToNumber(data[2]) * 1000),\n\t\tlabel,\n\t\tregistered: await registeredPromise,\n\t\tcontentHash: await contentHashPromise,\n\t\tmanager: await managerPromise,\n\t\tsubDomain,\n\t\tresolutionAddress: await resolutionAddressPromise,\n\t\tapproved: await approvedPromise,\n\t\tparentDomain,\n\t}\n}\n\nexport const getDomainInfos = async (accountAddress: AccountAddress | undefined, name: string): Promise<DomainInfo[]> => {\n\tconst subDomainPath = splitEnsStringToSubdomainPath(name)\n\treturn await Promise.all(subDomainPath.map((subDomain) => {\n\t\tconst [label, parentDomain] = splitDomainToSubDomainAndParent(subDomain)\n\t\tif (label === undefined) throw new Error('undefined label')\n\t\tconst nameHash = namehash(subDomain)\n\t\tconst token = labelhash(subDomain.slice(0, subDomain.indexOf('.')))\n\t\treturn getDomainInfo(accountAddress, nameHash, label, parentDomain, token, subDomain)\n\t}))\n}\n\nexport const getRequiredFusesWithoutApproval = (domainIndex: number, domainInfos: readonly DomainInfo[]) => {\n\treturn getRequiredFusesWithApproval(domainIndex, domainInfos).filter((fuse) => fuse !== 'Cannot Approve' && fuse !== 'Can Extend Expiry')\n}\n\nexport const getRequiredFusesWithApproval = (domainIndex: number, domainInfos: readonly DomainInfo[]) => {\n\tif (domainInfos.length === 1) return SINGLE_DOMAIN_FUSES\n\tif (domainIndex === 0 && domainInfos.length > 1) return TOP_PARENT_FUSES\n\tif (domainIndex === domainInfos.length - 1) return FINAL_CHILD_FUSES\n\treturn MID_PARENT_FUSES\n}\n\nexport const areRequiredFusesBurntWithoutApproval = (domainIndex: number, domainInfos: readonly DomainInfo[]) => {\n\tconst domainInfo = domainInfos[domainIndex]\n\tif (domainInfo === undefined) throw new Error('wrong index')\n\tif (!domainInfo.isWrapped) return false\n\tconst requiredFuses = getRequiredFusesWithoutApproval(domainIndex, domainInfos)\n\tfor (const requiredFuse of requiredFuses) {\n\t\tif (!domainInfo.fuses.includes(requiredFuse)) return false\n\t}\n\treturn true\n}\n\nexport const isValidEnsSubDomain = (subdomain: string): boolean => {\n\t// Regex to validate the ENS subdomain with infinite subdomains support\n\tconst ensRegex = /^(?!-)([a-zA-Z0-9-]+\\.)*[a-zA-Z0-9-]+(?<!-)\\.eth$/\n\treturn ensRegex.test(subdomain)\n}\n\nexport const isChildOwnershipOwnedByOpenRenewManager = (childInfo: DomainInfo) => {\n\treturn BigInt(getOpenRenewalManagerAddress()) === BigInt(childInfo.owner) && childInfo.isWrapped\n}\n\nexport const isChildOwnershipGivenAway = (childInfo: DomainInfo) => {\n\tconst owner = BigInt(childInfo.owner)\n\tconst renewalManager = BigInt(getOpenRenewalManagerAddress())\n\tconst burnAddresses = [\n\t\t0x0000000000000000000000000000000000000000n,\n\t\t0x000000000000000000000000000000000000deadn,\n\t\t0xdead000000000000000000000000000000000000n,\n\t\t0xdeaDDeADDEaDdeaDdEAddEADDEAdDeadDEADDEaDn\n\t]\n\treturn (renewalManager === owner || burnAddresses.includes(owner)) && childInfo.isWrapped\n}\n\nexport const proxyDeployerAddress = `0x7a0d94f55792c434d74a40883c6ed8545e406d12`\n\nexport async function ensureProxyDeployerDeployed(accountAddress: AccountAddress): Promise<void> {\n\tconst wallet = createWriteClient(accountAddress)\n\tconst deployerBytecode = await wallet.getCode({ address: proxyDeployerAddress })\n\tif (deployerBytecode === '0x60003681823780368234f58015156014578182fd5b80825250506014600cf3') return\n\tconst ethSendHash = await wallet.sendTransaction({ to: '0x4c8d290a1b368ac4728d83a9e8321fc3af2b39b1', amount: 10000000000000000n })\n\tawait wallet.waitForTransactionReceipt({ hash: ethSendHash })\n\tconst deployHash = await wallet.sendRawTransaction({ serializedTransaction: '0xf87e8085174876e800830186a08080ad601f80600e600039806000f350fe60003681823780368234f58015156014578182fd5b80825250506014600cf31ba02222222222222222222222222222222222222222222222222222222222222222a02222222222222222222222222222222222222222222222222222222222222222' })\n\tawait wallet.waitForTransactionReceipt({ hash: deployHash })\n}\n\nexport function getPetalLockAddress() {\n\tconst bytecode: `0x${ string }` = `0x${ petalLockContractArtifact.contracts['PetalLock.sol'].PetalLock.evm.bytecode.object }`\n\treturn getContractAddress({ bytecode, from: proxyDeployerAddress, opcode: 'CREATE2', salt: numberToBytes(0) })\n}\n\nexport function getOpenRenewalManagerAddress() {\n\tconst bytecode: `0x${ string }` = `0x${ petalLockContractArtifact.contracts['OpenRenewalManager.sol'].OpenRenewalManager.evm.bytecode.object }`\n\treturn getContractAddress({ bytecode, from: proxyDeployerAddress, opcode: 'CREATE2', salt: numberToBytes(0) })\n}\n\nconst isOpenRenewalManagerDeployed = async (accountAddress: AccountAddress | undefined) => {\n\tconst wallet = createReadClient(accountAddress)\n\tconst expectedDeployedBytecode: `0x${ string }` = `0x${ petalLockContractArtifact.contracts['OpenRenewalManager.sol'].OpenRenewalManager.evm.deployedBytecode.object }`\n\tconst address = getOpenRenewalManagerAddress()\n\tconst deployedBytecode = await wallet.getCode({ address })\n\treturn deployedBytecode === expectedDeployedBytecode\n}\n\nconst isPetalLockDeployed = async (accountAddress: AccountAddress | undefined) => {\n\tconst wallet = createReadClient(accountAddress)\n\tconst expectedDeployedBytecode: `0x${ string }` = `0x${ petalLockContractArtifact.contracts['PetalLock.sol'].PetalLock.evm.deployedBytecode.object }`\n\tconst address = getPetalLockAddress()\n\tconst deployedBytecode = await wallet.getCode({ address })\n\treturn deployedBytecode === expectedDeployedBytecode\n}\n\nexport const isPetalLockAndOpenRenewalManagerDeployed = async (accountAddress: AccountAddress | undefined) => {\n\treturn await isOpenRenewalManagerDeployed(accountAddress) && await isPetalLockDeployed(accountAddress)\n}\n\nexport const deployPetalLockTransaction = () => {\n\tconst bytecode: `0x${ string }` = `0x${ petalLockContractArtifact.contracts['PetalLock.sol'].PetalLock.evm.bytecode.object }`\n\treturn { to: proxyDeployerAddress, data: bytecode } as const\n}\n\nexport const deployOpenRenewalManagerTransaction = () => {\n\tconst bytecode: `0x${ string }` = `0x${ petalLockContractArtifact.contracts['OpenRenewalManager.sol'].OpenRenewalManager.evm.bytecode.object }`\n\treturn { to: proxyDeployerAddress, data: bytecode } as const\n}\n\nexport const deployPetalLockAndRenewalManager = async (accountAddress: AccountAddress) => {\n\tconst openRenewalManagerDeployed = await isOpenRenewalManagerDeployed(accountAddress)\n\tconst petalLockDeployed = await isPetalLockDeployed(accountAddress)\n\tif (openRenewalManagerDeployed && petalLockDeployed) throw new Error('already deployed')\n\tawait ensureProxyDeployerDeployed(accountAddress)\n\tconst client = createWriteClient(accountAddress)\n\tif (!openRenewalManagerDeployed) {\n\t\tconst hash = await client.sendTransaction(deployOpenRenewalManagerTransaction())\n\t\tawait client.waitForTransactionReceipt({ hash })\n\t}\n\tif (!petalLockDeployed) {\n\t\tconst hash = await client.sendTransaction(deployPetalLockTransaction())\n\t\tawait client.waitForTransactionReceipt({ hash })\n\t}\n}\n\nexport const getPetalLockUseTransaction = (petalLockAddress: AccountAddress, accountAddress: AccountAddress, subdomainRouteNames: string[], ownedTokens: bigint[], contentHash: string, resolutionAddress: string) => {\n\tconst labels = subdomainRouteNames.map((p) => {\n\t\tconst [label] = p.split('.')\n\t\tif (label === undefined) throw new Error('Not a valid ENS sub domain')\n\t\treturn label\n\t})\n\tconst encodedContentHash = contentHash === '' ? '0x' : tryEncodeContentHash(contentHash)\n\tif (encodedContentHash === undefined) throw new Error('Unable to decode content hash')\n\tif (resolutionAddress.length > 0 && !isAddress(resolutionAddress, { strict: true })) throw new Error('Resolution address is not valid')\n\tconst decodedResolutionAddress = resolutionAddress === '' ? '0x0000000000000000000000000000000000000000' : getAddress(resolutionAddress)\n\tconst data = encodeAbiParameters([\n\t\t{ name: 'labelPathToChild', type: 'string[]' },\n\t\t{ name: 'contenthash', type: 'bytes' },\n\t\t{ name: 'resolutionAddress', type: 'address' },\n\t], [labels, encodedContentHash, decodedResolutionAddress])\n\treturn {\n\t\tchain: mainnet,\n\t\taccount: accountAddress,\n\t\taddress: ENS_NAME_WRAPPER,\n\t\tabi: ENS_WRAPPER_ABI,\n\t\tfunctionName: 'safeBatchTransferFrom',\n\t\targs: [accountAddress, petalLockAddress, ownedTokens, ownedTokens.map(() => 1n), data]\n\t} as const\n}\n\nexport const callPetalLock = async (accountAddress: AccountAddress, domainInfos: DomainInfo[], contentHash: string, resolutionAddress: string) => {\n\tconst client = createWriteClient(accountAddress)\n\tconst petalLockAddress = getPetalLockAddress()\n\tconst subdomainRouteNames = domainInfos.map((x) => x.subDomain)\n\tconst ownedTokens = domainInfos.filter((info) => info.registered).map((info) => BigInt(info.nameHash))\n\tconst write = getPetalLockUseTransaction(petalLockAddress, accountAddress, subdomainRouteNames, ownedTokens, contentHash, resolutionAddress)\n\tconst hash = await client.writeContract(write)\n\treturn await client.waitForTransactionReceipt({ hash })\n}\n\nexport const renewDomainByYear = async (accountAddress: AccountAddress, extendYear: number, domainInfos: DomainInfo[]) => {\n\tconst client = createWriteClient(accountAddress)\n\tconst petalLockAddress = getPetalLockAddress()\n\tconst extendSeconds = 365n * 24n * 60n * 60n * BigInt(extendYear)\n\tconst domainsAndSubDomains = domainInfos.map((domain) => ({\n\t\tparentNode: namehash(domain.parentDomain),\n\t\tlabel: domain.label,\n\t\tdomainExpiry: domain.fuses.includes('Is .eth domain') ? extendSeconds : 0n\n\t}))\n\n\tconst totalRentCost = (await Promise.all(domainInfos.map( async (domain) =>\n\t\tdomain.fuses.includes('Is .eth domain') ? await client.readContract({\n\t\t\taddress: ENS_ETH_REGISTRAR_CONTROLLER,\n\t\t\tabi: ENS_REGISTRAR_CONTROLLER_ABI,\n\t\t\tfunctionName: 'rentPrice',\n\t\t\targs: [domain.subDomain, extendSeconds]\n\t\t}) : { base: 0n, premium: 0n }\n\t))).reduce((agg, current) => agg + current.base, 0n)\n\n\tconst hash = await client.writeContract({\n\t\tvalue: totalRentCost,\n\t\tchain: mainnet,\n\t\taccount: accountAddress,\n\t\taddress: petalLockAddress,\n\t\tabi: PETAL_LOCK_ABI,\n\t\tfunctionName: 'batchExtend',\n\t\targs: [domainsAndSubDomains]\n\t})\n\treturn await client.waitForTransactionReceipt({ hash })\n}\n\nexport const renewDomainToMax = async (accountAddress: AccountAddress, domainInfos: DomainInfo[]) => {\n\tconst client = createWriteClient(accountAddress)\n\tconst petalLockAddress = getPetalLockAddress()\n\tconst domainsAndSubDomains = domainInfos.filter((x) => !x.fuses.includes('Is .eth domain')).map((domain) => ({\n\t\tparentNode: namehash(domain.parentDomain),\n\t\tlabel: domain.label,\n\t\tdomainExpiry: 0n\n\t}))\n\n\tconst hash = await client.writeContract({\n\t\tchain: mainnet,\n\t\taccount: accountAddress,\n\t\taddress: petalLockAddress,\n\t\tabi: PETAL_LOCK_ABI,\n\t\tfunctionName: 'batchExtend',\n\t\targs: [domainsAndSubDomains]\n\t})\n\treturn await client.waitForTransactionReceipt({ hash })\n}\n"]}